# base-files version 4.0-1
# /etc/profile: executed by bash(1) for login shells.

# The latest version as installed by the Cygwin Setup program can
# always be found at /etc/defaults/etc/profile

# Modifying /etc/profile directly will prevent
# setup from updating it.

# System-wide profile file

# Some resources...
# Customizing Your Shell: http://www.dsl.org/cookbook/cookbook_5.html#SEC69
# Consistent BackSpace and Delete Configuration:
#   http://www.ibb.net/~anne/keyboard.html
# The Linux Documentation Project: http://www.tldp.org/
# The Linux Cookbook: http://www.tldp.org/LDP/linuxcookbook/html/

# Setup some default paths. Note that this order will allow user installed
# software to override 'system' software.
# Modifying these default path settings can be done in complementary ways:
#  a) system-wide
#  b) per-user
#  c) per shell
# To learn more about startup files, refer to your shell's man page.
export PATH="/usr/local/bin:/usr/bin:/bin:${PATH}"
export MANPATH="/usr/local/man:/usr/share/man:/usr/man:${MANPATH}"
export INFOPATH="/usr/local/info:/usr/share/info:/usr/info:${INFOPATH}"

# Set the user id
export USER="$(id -un)"

# Here is how HOME is set, in order of priority, when starting from Windows
#  1) From existing HOME in the Windows environment, translated to a Posix path
#  2) from /etc/passwd, if there is an entry with a non empty directory field
#  3) from HOMEDRIVE/HOMEPATH
#  4) / (root)
# If the home directory doesn't exist, create it.
if [ ! -d "${HOME}" ]; then
	if mkdir -p "${HOME}"; then
		echo "Copying skeleton files."
		echo "These files are for the users to personalise their cygwin experience."
		echo
		echo "They will never be overwritten nor automatically updated."
		echo
		cd /etc/skel
		/bin/find . -type f | while read f; do
      fDest=$(echo ${f} | sed -e 's/^\.//g')
      if [ ! -e "${HOME}${fDest}" -a ! -L "${HOME}${fDest}" ]; then
      	/usr/bin/install -D -p -v "${f}" "${HOME}/${fDest}"
      fi
		done
	else
    echo "${HOME} could not be created."
		{ [ -d "${TEMP}" ] && HOME="${TEMP}"; } ||
		{ [ -d "${TMP}" ] && HOME="${TMP}"; } ||
		{ [ -d /tmp ] && HOME=/tmp; } ||
		HOME=/
		echo "Setting HOME to ${HOME}."
	fi
elif [ ! -O "$HOME" -a "${HOME#/home/}" != "${HOME}" ]
  echo "WARNING: Your home directory at ${HOME} is owned by someone else!"
  echo "WARNING: This doesn't prevent the shell from starting, but some "
  echo "WARNING: programs expect your ${HOME} to belong to you."
  echo "WARNING: Please consider correcting this issue."
fi
 
# Set a minumum PS1 prompt, and let specific shells startup scripts alter it.
export PS1="$ "

# It is recommended that cvs uses ssh for it's remote shell environment
export CVS_RSH="/bin/ssh"

# Patches to Cygwin always appreciated ;)
# export CVSROOT=:pserver:anoncvs@sources.redhat.com:/cvs/src

# Define default printer
read -r < PRINTER '/proc/registry/HKEY_CURRENT_USER/Software/Microsoft/Windows NT/CurrentVersion/Windows/Device'
export PRINTER=${PRINTER%%,*}

# Default to removing the write permission for group and other
#  (files normally created with mode 777 become 755; files created with
#  mode 666 become 644)
umask 022

# Make sure we start in home unless invoked by CHERE
if [ ! -z "${CHERE_INVOKING}" ]; then
	unset CHERE_INVOKING
else
	cd "${HOME}"
fi

# Check to see if mkpasswd/mkgroup needs to be run try and cut down the emails
#   about this on the lists!
#
# The following are the conditions under which the group name special cases 
#   will appear (where uid and gid are the effective user and group ids
#   for the current user, and pgsid is the primary group associated with the
#   SID for the current user):
#       mkpasswd:
#         gid is not in /etc/group
#         uid is not in /etc/passwd
#       passwd/group_GID_clash(<gid>/<pgsid>):
#         gid is not in /etc/group
#         uid is in /etc/passwd
#         pgsid is in /etc/group (and does not match gid)
#       mkgroup:
#         gid is not in /etc/group
#         uid is in /etc/passwd
#         pgsid is not in /etc/group
#
# If this message keeps appearing and you are sure it's a mistake (ie, don't
#   email about it!), comment out the test below.
case `id -ng` in
mkpasswd )
	echo "Your group is currently \"mkpasswd\".  This indicates that your"
	echo "gid is not in /etc/group and your uid is not in /etc/passwd."
	echo
	echo "The /etc/passwd (and possibly /etc/group) files should be rebuilt."
	echo "See the man pages for mkpasswd and mkgroup then, for example, run"
	echo
	echo "mkpasswd -l [-d] > /etc/passwd"
	echo "mkgroup  -l [-d] > /etc/group"
	echo
	echo "Note that the -d switch is necessary for domain users."
	;;
passwd/group_GID_clash* )
	echo "Your group is currently \"passwd/group_GID_clash(gid/pgsid)\".  This"
	echo "indicates that your gid is not in /etc/group, but the pgsid (primary "
	echo "group associated with your SID) is in /etc/group."
	echo
	echo "The /etc/passwd (and possibly /etc/group) files should be rebuilt."
	echo "See the man pages for mkpasswd and mkgroup then, for example, run"
	echo
	echo "mkpasswd -l [-d] > /etc/passwd"
	echo "mkgroup  -l [-d] > /etc/group"
	echo
	echo "Note that the -d switch is necessary for domain users."
	;;
mkgroup )
	echo "Your group is currently \"mkgroup\".  This indicates that neither"
	echo "your gid nor your pgsid (primary group associated with your SID)"
	echo "is in /etc/group."
	echo
	echo "The /etc/group (and possibly /etc/passwd) files should be rebuilt."
	echo "See the man pages for mkpasswd and mkgroup then, for example, run"
	echo
	echo "mkpasswd -l [-d] > /etc/passwd"
	echo "mkgroup  -l [-d] > /etc/group"
	echo
	echo "Note that the -d switch is necessary for domain users."
	;;
esac
